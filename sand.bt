#include "common/common.bt"
#include "common/anim_common.bt"

enum <uint> SAND_SECTION_TYPE
{
	SAND_SECTION_TYPE_TRACK_OFFSETS = 1,
	SAND_SECTION_TYPE_NODES = 2,
	SAND_SECTION_TYPE_HASH_TABLES = 3,
	SAND_SECTION_TYPE_TARGET_NAME_TABLES = 4,
};

struct SandHeader
{
	uint Version; // June 23rd, 2014 
    if (Version==372703500)
	{ 
		BigEndian();
		BitfieldRightToLeft();
	}

	uint FileSize; Assert(FileSize == FileSize());
	uint SectionCount; Assert(SectionCount == 4);
	uint TrackCount;
		
	struct SandSectionDesc
	{
		SAND_SECTION_TYPE Type;
		uint Count;
		uint Offset;
		uint DataSize;
	} SectionDescs[SectionCount] <fgcolor = 0x8694EB>; // ROOT Section Params
} Header <bgcolor = 0xB3A797>;

// Section #1: Track Offsets

//Offsets to tracks within object nodes in the node tree.

FSeek(startof(Header.SectionDescs[0]) + Header.SectionDescs[0].Offset);

uint TrackOffsets[Header.SectionDescs[0].Count] <bgcolor = 0x8694EB>;

// Section #2: Node tree

//The meat of the file - the object node tree with track definitions.

FSeek(startof(Header.SectionDescs[1]) + Header.SectionDescs[1].Offset);

#include "common/anim_FoxData.bt"

FoxDataNodes Nodes;

// Section #3: Non-object track header references

//Names of non-object tracks and their indices. Ex: CameraParam, SI Image, and some shaders.
//Sorted by name hash ascending order.

FSeek(startof(Header.SectionDescs[2]) + Header.SectionDescs[2].Offset);

// Used in fox::anim::SandFile::NodeNameToTrackId
struct SandHashTable
{
	StrCode32 Name; // Hash of the object name, sometimes CameraParam or SI Frame.
	uint TrackId;
} HashTable[Header.SectionDescs[2].Count] <bgcolor = 0xB9E7CA>;

// Section #4: Object Track Sets

//Names of object actors and indices of related tracks, plus the shader track offset.
//Sorted by name hash ascending order.

FSeek(startof(Header.SectionDescs[3]) + Header.SectionDescs[3].Offset);

// Used in fox::anim::SandFile::TargetNameAttributeValueToTrackIds
struct SandTargetNameTable
{
	StrCode32 Name;
	short MoveTrackId;
	short SkelTrackId;
	short FragmentTrackId;
	short MotionPointTrackId;
	uint ShaderOffset; // global offset to shader object
} TargetNameTable[Header.SectionDescs[3].Count] <optimize = false, read = Str("Name: %u", Name.hash), bgcolor = 0x9A7F7E>;